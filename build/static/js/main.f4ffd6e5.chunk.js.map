{"version":3,"sources":["components/SalesforceComponent.js","App.js","serviceWorker.js","index.js","config.js"],"names":["Salesforce","props","handleSubmitDate","e","setState","btnState","preventDefault","state","pin","alert","axios","method","url","URL","Node","data","stDate","enDate","then","response","status","dataCount","toFixed","window","location","reload","catch","error","handleSubmitInv","invName","handleInputChange","target","value","type","checked","name","date","Date","setDate","getDate","toISOString","split","bind","className","role","aria-label","id","autoComplete","htmlFor","this","required","onChange","onSubmit","min","disabled","Component","App","SalesforceComponent","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message","exports"],"mappings":"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","file":"static/js/main.f4ffd6e5.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/no-redundant-roles */\r\nimport React, { Component } from \"react\";\r\nimport axios from 'axios';\r\nimport { URL } from '../config';\r\nimport \"../App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nclass Salesforce extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            pin: null,\r\n            stDate: null,\r\n            enDate: null,\r\n            invName: null,\r\n            btnState: false        \r\n        };\r\n        // this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmitDate = this.handleSubmitDate.bind(this);\r\n        this.handleSubmitInv = this.handleSubmitInv.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n    handleSubmitDate = e => {\r\n        this.setState({btnState: true});\r\n        e.preventDefault();\r\n        if(!this.state.pin)\r\n        {\r\n            alert('Please Enter a Valid PIN to Continue...');\r\n            this.setState({btnState: false});\r\n            return;\r\n        }\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: URL.Node+'SF/date-wise',\r\n            data: {\r\n                pin: this.state.pin,\r\n                stDate: this.state.stDate,\r\n                enDate: this.state.enDate\r\n            }  \r\n        })\r\n        .then((response) => {\r\n            if(response.data.status === 'invalidPIN'){\r\n                alert('Invalid PIN...');\r\n            }\r\n            else if(response.data.status === 'completed'){\r\n                alert('Request Succeeded...\\nThere are '+response.data.dataCount +' Records Exists in Salesforce For Selected Date Frame i.e '+this.state.stDate +' to '+this.state.enDate +'\\n It will be updated in Oracle Database in approx '+((response.data.dataCount/2000)+1).toFixed() +' minutes...');\r\n                window.location.reload();\r\n            }\r\n            else if(response.data.status === 'alreadyRunning'){\r\n                alert('Previous Request is already in process, Please wait for approx 2-20 Minutes...');\r\n            }\r\n            else if(response.data.status === 'errorOccurred'){\r\n                alert('An Error Occurred, Contact IT Team..');\r\n            }\r\n            else{\r\n                alert('Unknown Error Occurred...');\r\n            }\r\n            this.setState({btnState: false});\r\n\r\n        })\r\n        .catch((error) => {\r\n            alert('Unknown Error Occurred...');\r\n            this.setState({btnState: false});\r\n        });\r\n    }\r\n\r\n    handleSubmitInv = e => {\r\n        this.setState({btnState: true});\r\n        e.preventDefault();\r\n        if(!this.state.pin)\r\n        {\r\n            alert('Please enter a valid PIN to continue...');\r\n            this.setState({btnState: false});\r\n\r\n            return;\r\n        }\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: URL.Node+'SF/inv-number',\r\n            data: {\r\n                pin: this.state.pin,\r\n                invName: this.state.invName\r\n            }  \r\n        })\r\n        .then((response) => {\r\n            if(response.data.status === 'invalidPIN'){\r\n                alert('Invalid PIN...');\r\n            }\r\n            else if(response.data.status === 'completed'){\r\n                alert('Request Succeeded, if ' +this.state.invName +' Exists in Salesforce data, it will be updated in Oracle Database in about 2 minutes...');\r\n                window.location.reload();\r\n            }\r\n            else if(response.data.status === 'alreadyRunning'){\r\n                alert('Previous Request is already in process, Please wait for approx 2-20 Minutes...');\r\n            }\r\n            else if(response.data.status === 'errorOccurred'){\r\n                alert('An Error Occurred, Contact IT Team..');\r\n            }\r\n            else{\r\n                alert('Unknown Error Occurred...');\r\n            }\r\n            this.setState({btnState: false});\r\n\r\n        })\r\n        .catch((error) => {\r\n            alert('Unknown Error Occurred...');\r\n            this.setState({btnState: false});            \r\n        });\r\n        \r\n\r\n    }\r\n\r\n    handleInputChange = e => {\r\n        const target = e.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        if(e.target.name === 'stDate'){\r\n            var date = new Date(value);\r\n            date.setDate(date.getDate() + 29);\r\n            this.setState({ [name]: value, enDate: date.toISOString().split('T')[0] });\r\n        }\r\n        else\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"App\">\r\n                <div className=\"container py-3\">\r\n                    <div className=\"row align-items-center\">\r\n                        <div className=\"col-md-12\"> \r\n                            <h2 className=\"text-center mb-3\">MTBC/Care Cloud - Salesforce/Oracle Integration</h2>\r\n                            <nav className=\"btn-toolbar justify-content-center\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\r\n                            </nav>\r\n                            <hr className=\"mb-4\" />\r\n                            <div className=\"row justify-content-center\">\r\n                                <div className=\"col-md-6\">\r\n                                    <span className=\"anchor\" id=\"formLogin\" /> \r\n                                    <div className=\"card card-outline-secondary\">\r\n                                        <div className=\"card-header\">\r\n                                            <h3 className=\"mb-0\">PIN Authentication</h3>\r\n                                        </div>\r\n                                        <div className=\"card-body\">\r\n                                            <form autoComplete=\"off\" className=\"form\" id=\"formLogin\" name=\"formLogin\" role=\"form\">\r\n                                                <div className=\"form-group row\">\r\n                                                    <label htmlFor=\"pin\" className=\"col-2 col-form-label\">PIN</label>\r\n                                                    <div className=\"col-10\">\r\n                                                        <input autoComplete=\"new-password\" value={this.state.pin} className=\"form-control\" name=\"pin\" id=\"pin\" required type=\"password\" onChange={this.handleInputChange}/>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <p>Required field, please enter a valid PIN...</p>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <hr className=\"mb-4\" />\r\n                            <div className=\"row justify-content-center\">\r\n                                <div className=\"col-md-6\">\r\n                                    <div className=\"card card-outline-secondary\">\r\n                                        <div className=\"card-header\">\r\n                                            <h3 className=\"mb-0\">Search By Date Range</h3>\r\n                                        </div>\r\n                                        <div className=\"card-body\">\r\n                                            <form autoComplete=\"off\" className=\"form\" role=\"form\" onSubmit={this.handleSubmitDate}>\r\n                                                <div className=\"form-group row\">\r\n                                                    <label htmlFor=\"stDate\" className=\"col-3 col-form-label\">Start Date</label>\r\n                                                    <div className=\"col-9\">\r\n                                                        <input className=\"form-control\" type=\"date\" min=\"2020-06-01\" name=\"stDate\" id=\"stDate\" required value={this.state.stDate} onChange={this.handleInputChange}/>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-group row\">\r\n                                                    <label htmlFor=\"enDate\" className=\"col-3 col-form-label\" disabled>End Date</label>\r\n                                                    <div className=\"col-9\">\r\n                                                        <input className=\"form-control\" type=\"date\" name=\"enDate\" id=\"enDate\" disabled value={this.state.enDate} onChange={this.handleInputChange}/>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <p>Please select 'Start Date', 'End Date' will be automatically selected at range of 30 days...</p>\r\n                                                <div className=\"form-group\">\r\n                                                    <button className=\"btn btn-primary btn-m float-right\" type=\"submit\" disabled={this.state.btnState}>Submit</button>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <hr className=\"mb-4\" />\r\n                            <div className=\"row justify-content-center\">\r\n                                <div className=\"col-md-6\">\r\n                                    <span className=\"anchor\" id=\"formChangePassword\" />\r\n                                    <div className=\"card card-outline-secondary\">\r\n                                        <div className=\"card-header\">\r\n                                            <h3 className=\"mb-0\">Search By Invoice Name</h3>\r\n                                        </div>\r\n                                        <div className=\"card-body\">\r\n                                            <form autoComplete=\"off\" className=\"form\" role=\"form\" onSubmit={this.handleSubmitInv}>\r\n                                                <div className=\"form-group row\">\r\n                                                    <label htmlFor=\"invName\" className=\"col-3 col-form-label\">Invoice Name</label>\r\n                                                    <div className=\"col-9\">\r\n                                                        <input className=\"form-control\" id=\"invName\" name=\"invName\" required type=\"text\" value={this.state.invName} onChange={this.handleInputChange}/>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <p>Please enter a valid invoice name - [INV-#########]</p>\r\n                                                <div className=\"form-group\">\r\n                                                    <button className=\"btn btn-primary btn-m float-right\" type=\"submit\" disabled={this.state.btnState}>Submit</button>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <hr className=\"mb-4\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n  \r\n}\r\n\r\nexport default Salesforce;\r\n  \r\n     \r\n   \r\n ","import React from 'react';\nimport './App.css';\nimport SalesforceComponent from './components/SalesforceComponent';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SalesforceComponent/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","exports.URL = {\r\n    Node:'http://172.16.6.71:7007/'\r\n}"],"sourceRoot":""}