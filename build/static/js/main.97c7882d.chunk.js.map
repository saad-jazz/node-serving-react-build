{"version":3,"sources":["config.js","components/SalesforceComponent.js","App.js","index.js"],"names":["exports","URL","Node","Salesforce","props","handleSubmitDate","e","setState","btnState","preventDefault","state","pin","alert","axios","method","url","data","stDate","enDate","then","response","status","window","scrollTo","dataCount","toFixed","location","reload","catch","error","handleSubmitInv","invName","handleStartSync","err","handleInputChange","target","value","type","checked","name","date","Date","setDate","getDate","toISOString","split","currentStatus","syncCheck","bind","console","log","className","role","aria-label","id","this","autoComplete","htmlFor","required","onChange","onSubmit","min","disabled","Component","App","SalesforceComponent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.97c7882d.chunk.js","sourcesContent":["exports.URL = {\r\n    Node:'http://172.16.6.216:7007/'\r\n}","/* eslint-disable jsx-a11y/no-redundant-roles */\r\nimport React, { Component } from \"react\";\r\nimport axios from 'axios';\r\nimport { URL } from '../config';\r\nimport \"../App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nclass Salesforce extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            pin: '',\r\n            stDate: '',\r\n            enDate: '',\r\n            invName: '',\r\n            btnState: false,\r\n            currentStatus: '',\r\n            syncCheck: false\r\n        };\r\n        // this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmitDate = this.handleSubmitDate.bind(this);\r\n        this.handleSubmitInv = this.handleSubmitInv.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        axios({\r\n            method: 'get',\r\n            url: URL.Node+'SF/currentStatus' \r\n        })\r\n        .then((response) => {\r\n            if(response.data.status === 'inProgress'){\r\n                this.setState({currentStatus: 'Busy \\u274E'});\r\n            }\r\n            else if(response.data.status === 'notRunning'){\r\n                this.setState({currentStatus: 'Free \\u2705'});\r\n            }\r\n            else{\r\n                this.setState({currentStatus: 'API Not Connected \\u274C'});\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n            this.setState({currentStatus: 'API Not Connected \\u274C'});\r\n            this.setState({btnState: false});\r\n        });\r\n    }\r\n    handleSubmitDate = e => {\r\n        this.setState({btnState: true});\r\n        e.preventDefault();\r\n        if(!this.state.pin)\r\n        {\r\n            alert('Please Enter a Valid PIN to Continue...');\r\n            this.setState({btnState: false});\r\n            return;\r\n        }\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: URL.Node+'SF/date-wise',\r\n            data: {\r\n                pin: this.state.pin,\r\n                stDate: this.state.stDate,\r\n                enDate: this.state.enDate\r\n            }  \r\n        })\r\n        .then((response) => {\r\n            if(response.data.status === 'invalidPIN'){\r\n                alert('Invalid PIN...');\r\n                window.scrollTo(0, 0);\r\n            }\r\n            else if(response.data.status === 'completed'){\r\n                alert('Request Succeeded...\\nThere are '+response.data.dataCount +' Records Exists in Salesforce For Selected Date Frame i.e '+this.state.stDate +' to '+this.state.enDate +'\\n It will be updated in Oracle Database in approx '+((response.data.dataCount/2000)+1).toFixed() +' minutes...');\r\n                window.location.reload();\r\n            }\r\n            else if(response.data.status === 'alreadyRunning'){\r\n                alert('Previous Request is already in process, Please wait for approx 2-20 Minutes...');\r\n            }\r\n            else if(response.data.status === 'errorOccurred'){\r\n                alert('An Error Occurred, Contact IT Team..');\r\n            }\r\n            else{\r\n                alert('Unknown Error Occurred...');\r\n            }\r\n            this.setState({btnState: false});\r\n\r\n        })\r\n        .catch((error) => {\r\n            alert('Unknown Error Occurred...');\r\n            this.setState({btnState: false});\r\n        });\r\n    }\r\n\r\n    handleSubmitInv = e => {\r\n        this.setState({btnState: true});\r\n        e.preventDefault();\r\n        if(!this.state.pin)\r\n        {\r\n            alert('Please enter a valid PIN to continue...');\r\n            this.setState({btnState: false});\r\n\r\n            return;\r\n        }\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: URL.Node+'SF/inv-number',\r\n            data: {\r\n                pin: this.state.pin,\r\n                invName: this.state.invName\r\n            }  \r\n        })\r\n        .then((response) => {\r\n            if(response.data.status === 'invalidPIN'){\r\n                alert('Invalid PIN...');\r\n                window.scrollTo(0, 0);\r\n            }\r\n            else if(response.data.status === 'completed'){\r\n                alert('Request Succeeded, if ' +this.state.invName +' Exists in Salesforce data, it will be updated in Oracle Database in about 2 minutes...');\r\n                window.location.reload();\r\n            }\r\n            else if(response.data.status === 'alreadyRunning'){\r\n                alert('Previous Request is already in process, Please wait for approx 2-20 Minutes...');\r\n            }\r\n            else if(response.data.status === 'errorOccurred'){\r\n                alert('An Error Occurred, Contact IT Team..');\r\n            }\r\n            else{\r\n                alert('Unknown Error Occurred...');\r\n            }\r\n            this.setState({btnState: false});\r\n\r\n        })\r\n        .catch((error) => {\r\n            alert('Unknown Error Occurred...');\r\n            this.setState({btnState: false});            \r\n        });\r\n        \r\n\r\n    }\r\n\r\n    handleStartSync = e => {\r\n        this.setState({btnState: true});\r\n        e.preventDefault();\r\n        if(!this.state.pin)\r\n        {\r\n            alert('Please enter a valid PIN to continue...');\r\n            this.setState({btnState: false});\r\n            window.scrollTo(0, 0);\r\n            return;\r\n        }\r\n        axios({\r\n            method: 'post',\r\n            url: URL.Node+'SF/dumpToSF',\r\n            data: {\r\n                pin: this.state.pin\r\n            }  \r\n        })\r\n        .then((response) => {\r\n            if(response.data.status === 'invalidPIN'){\r\n                alert('Invalid PIN...');\r\n                window.scrollTo(0, 0);\r\n            }\r\n            else if(response.data.status === 'completed'){\r\n                alert('Sync Completed...');\r\n            }\r\n            else if(response.data.status === 'putError'){\r\n                alert('Error Occurred While Putting Response Data into Oracle...');\r\n            }\r\n            else if(response.data.status === 'SFError'){\r\n                alert('Error Occurred While Updating Data into Salesforce...');\r\n            }\r\n            else if(response.data.status === 'getError'){\r\n                alert('Error Occurred While Getting Data from Oracle...');\r\n            }\r\n            else if(response.data.status === 'alreadyRunning'){\r\n                alert('Previous Request is already in process, Please wait for approx 2-20 Minutes...');\r\n            }\r\n            else if(response.data.status === 'errorOccurred'){\r\n                alert('Unknown Error Occurred...');\r\n            }\r\n            else{\r\n                alert('Unknown Error Occurred...');\r\n            }\r\n            this.setState({btnState: false});\r\n            window.location.reload();\r\n\r\n        })\r\n        .catch((err) => {\r\n            alert('Unknown Error Occurred...');\r\n            this.setState({btnState: false});            \r\n        });\r\n        \r\n    }\r\n\r\n\r\n    handleInputChange = e => {\r\n        const target = e.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        if(e.target.name === 'stDate'){\r\n            var date = new Date(value);\r\n            date.setDate(date.getDate() + 29);\r\n            this.setState({ [name]: value, enDate: date.toISOString().split('T')[0] });\r\n        }\r\n        else\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"App\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row align-items-center\">\r\n                        <div className=\"col-md-12\"> \r\n                            <h1 className=\"text-center mb-3\">. . : : MTBC/CareCloud - Salesforce/Oracle Integration : : . .</h1>\r\n                            <nav className=\"btn-toolbar justify-content-center\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\r\n                            </nav>\r\n                            <hr className=\"mb-4\" />\r\n                            <div className=\"row justify-content-center\">\r\n                                <div className=\"col-md-6\">\r\n                                    <span className=\"anchor\" id=\"formLogin\" /> \r\n                                    <h5>Status: {this.state.currentStatus}</h5>    \r\n                                    <div className=\"card card-outline-secondary\">\r\n                                        <div className=\"card-header\">\r\n                                        <h3 className=\"mb-0\">PIN Authentication</h3>\r\n                                        </div>\r\n                                        <div className=\"card-body\">\r\n                                            <form autoComplete=\"off\" className=\"form\" id=\"formLogin\" name=\"formLogin\" role=\"form\">\r\n                                                <div className=\"form-group row\">\r\n                                                    <label htmlFor=\"pin\" className=\"col-2 col-form-label\">PIN*</label>\r\n                                                    <div className=\"col-10\">\r\n                                                        <input autoComplete=\"new-password\" value={this.state.pin} className=\"form-control\" name=\"pin\" id=\"pin\" required type=\"password\" onChange={this.handleInputChange}/>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <p className=\"hint\">Required field, please enter a valid PIN...</p>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <hr className=\"mb-4\" />\r\n                            <div className=\"row justify-content-center\">\r\n                                <div className=\"col-md-6\">\r\n                                    <div className=\"card card-outline-secondary\">\r\n                                        <div className=\"card-header\">\r\n                                            <h3 className=\"mb-0\">Search By Date Range</h3>\r\n                                        </div>\r\n                                        <div className=\"card-body\">\r\n                                            <form autoComplete=\"off\" className=\"form\" role=\"form\" onSubmit={this.handleSubmitDate}>\r\n                                                <div className=\"form-group row\">\r\n                                                    <label htmlFor=\"stDate\" className=\"col-3 col-form-label\">Start Date</label>\r\n                                                    <div className=\"col-9\">\r\n                                                        <input className=\"form-control\" type=\"date\" min=\"2020-06-01\" name=\"stDate\" id=\"stDate\" required value={this.state.stDate} onChange={this.handleInputChange}/>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-group row\">\r\n                                                    <label htmlFor=\"enDate\" className=\"col-3 col-form-label\" disabled>End Date</label>\r\n                                                    <div className=\"col-9\">\r\n                                                        <input className=\"form-control\" type=\"date\" name=\"enDate\" id=\"enDate\" disabled value={this.state.enDate} onChange={this.handleInputChange}/>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <p className=\"hint\">Please select 'Start Date', 'End Date' will be automatically selected at range of 30 days...</p>\r\n                                                <div className=\"form-group\">\r\n                                                    <button className=\"btn btn-primary btn-m float-right\" type=\"submit\" disabled={this.state.btnState}>Submit</button>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <hr className=\"mb-4\" />\r\n                            <div className=\"row justify-content-center\">\r\n                                <div className=\"col-md-6\">\r\n                                    <span className=\"anchor\" id=\"formChangePassword\" />\r\n                                    <div className=\"card card-outline-secondary\">\r\n                                        <div className=\"card-header\">\r\n                                            <h3 className=\"mb-0\">Search By Invoice Name</h3>\r\n                                        </div>\r\n                                        <div className=\"card-body\">\r\n                                            <form autoComplete=\"off\" className=\"form\" role=\"form\" onSubmit={this.handleSubmitInv}>\r\n                                                <div className=\"form-group row\">\r\n                                                    <label htmlFor=\"invName\" className=\"col-3 col-form-label\">Invoice Name</label>\r\n                                                    <div className=\"col-9\">\r\n                                                        <input className=\"form-control\" id=\"invName\" name=\"invName\" required type=\"text\" value={this.state.invName} onChange={this.handleInputChange}/>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <p className=\"hint\">Please enter a valid invoice name - [INV-#########]</p>\r\n                                                <div className=\"form-group\">\r\n                                                    <button className=\"btn btn-primary btn-m float-right\" type=\"submit\" disabled={this.state.btnState}>Submit</button>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <hr className=\"mb-4\" />\r\n                            <div className=\"row justify-content-center\">\r\n                                <div className=\"col-md-6\">\r\n                                    <span className=\"anchor\" id=\"formChangePassword\" />\r\n                                    <div className=\"card card-outline-secondary\">\r\n                                        <div className=\"card-header\">\r\n                                            <h3 className=\"mb-0\">Sync Oracle With Salesforce</h3>\r\n                                        </div>\r\n                                        <div className=\"card-body\">\r\n                                            <form autoComplete=\"off\" className=\"form\" role=\"form\" onSubmit={this.handleStartSync}>\r\n                                                <div className=\"form-group row\">\r\n                                                    {/* <label htmlFor=\"invName\" className=\"col-3 col-form-label\">Invoice Name</label> */}\r\n                                                    <div className=\"col-12\">\r\n                                                        <h4>Disclaimer</h4>\r\n                                                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\r\n                                                        <input type=\"checkbox\" id=\"syncCheck\" name=\"syncCheck\" value={this.state.syncCheck} onChange={this.handleInputChange} required/>\r\n                                                        <label htmlFor=\"syncCheck\">&nbsp;I agree to the above written 'Lorem Ipsum' disclaimer.</label>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <button className=\"btn btn-primary btn-m float-right\" type=\"submit\" disabled={this.state.btnState}>Start Sync</button>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <hr className=\"mb-4\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n  \r\n}\r\n\r\nexport default Salesforce;\r\n  \r\n     \r\n   \r\n ","import React from 'react';\nimport './App.css';\nimport SalesforceComponent from './components/SalesforceComponent';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SalesforceComponent/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}